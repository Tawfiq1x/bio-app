datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String      @id @default(uuid())
  email         String      @unique
  password      String?
  name          String?
  image         String?
  emailVerified DateTime?
  isAdmin       Boolean     @default(false)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  // Relations
  profile     Profile?
  userBadges  UserBadge[]
  visits      Visit[]
  linkClicks  LinkClick[]
}

model Profile {
  id          String   @id @default(uuid())
  userId      String   @unique
  bio         String?
  avatar      String?
  banner      String?
  socialLinks Json?    // Optional JSON for social links (e.g., Twitter, Instagram)
  createdAt   DateTime @default(now())
  
  user        User     @relation(fields: [userId], references: [id])
}

model Badge {
  id        String   @id @default(uuid())
  name      String
  icon      String   // Relative path to icon in public/badges/...
  isGlobal  Boolean  @default(false)  // Global badges are visible to every user
  createdAt DateTime @default(now())

  userBadges UserBadge[]
}

model UserBadge {
  id         String    @id @default(uuid())
  user       User      @relation(fields: [userId], references: [id])
  userId     String
  badge      Badge     @relation(fields: [badgeId], references: [id])
  badgeId    String
  assignedAt DateTime  @default(now())
  
  @@unique([userId, badgeId])
}

model Visit {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  visitedAt DateTime @default(now())
  ipAddress String?
  userAgent String?
}

model LinkClick {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  clickedAt DateTime @default(now())
  ipAddress String?
  userAgent String?
  platform  String?  // E.g., "twitter", "instagram"
}
